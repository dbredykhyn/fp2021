
-- Лабораторна робота №3
    -- Студента групи КН-32 підгрупа 1
    -- Бредіхіна Дмитра
    -- Варіант №14

    -- Мета: Набути досвiду визначення та використання функцiй вищого порядку.

module Lab3 where

    ----------------------------
    -- Завдання 1.14
    -- Знайти передостаннiй елемент списку.

    -- З застосуванням вбудованих функцiй вищого порядку:
    preLast :: [a] -> a
    preLast xs = fst $ head $ filter (\(val, idx) -> idx == 2) $ zip (reverse xs) [1..]

    -- Без застосування вбудованих функцiй вищого порядку:
    preLast2 :: [a] -> a
    preLast2 xs = reverse xs !! 1

    -- Тестування:
    -- Prelude> :load lab3/lab3.hs 
    -- [1 of 1] Compiling Lab3             ( lab3/lab3.hs, interpreted )
    -- Ok, one module loaded.
    -- *Lab3> preLast "abcdef"
    -- 'e'
    -- *Lab3> preLast2 [1, 2, 3, 4, 5, 6, 7]
    -- 6

    ----------------------------
    -- Завдання 2.14
    -- Циклiчний лiвий зсув списку на n позицiй.

    -- З застосуванням вбудованих функцiй вищого порядку:
    shift2 0 xs = xs
    shift2 _ [] = []
    shift2 n xs = shift2 (n-1) $ flip (++) [head xs] $ tail xs

    -- Без застосування вбудованих функцiй вищого порядку:
    shift :: Int -> [a] -> [a]
    shift n xs
        | n == 0            = xs
        | null xs           = []
        | otherwise         = shift (n-1) $ tail xs ++ [head xs]

    -- Тестування:
    -- Prelude> :load lab3/lab3.hs 
    -- [1 of 1] Compiling Lab3             ( lab3/lab3.hs, interpreted )
    -- Ok, one module loaded.
    -- *Lab3> shift 4 "abcdefgh"
    -- "efghabcd"
    -- *Lab3> shift2 9 [1, 2, 3, 4]
    -- [2,3,4,1]


    -- Висновок:
    -- В результаті виконання лабораторної роботи було створено два
    -- варіанти для двох функцій
    -- (з використанням вбудованих функцій вищого порядку, та без)
    -- відповідно з заданим варіантом роботи.
    -- Це дозволило закріпити знання та набути практичних навичок
    -- по використанню функцій вищого порядку
    -- функціональної мови програмування haskell.
